@page "/register"
@using expenzo.Services
@using expenzo.Models
@inject IUserService UserService
@inject NavigationManager Navigation

<h3>Register</h3>

<EditForm Model="@newUser" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <InputText id="username" class="form-control" @bind-Value="newUser.UserName" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="newUser.Password" />
    </div>
    <div class="mb-3">
        <label for="currency" class="form-label">Currency</label>
        <InputSelect id="currency" class="form-control" @bind-Value="newUser.Currency">
            <option value="">Select Currency</option>
            <option value="NPR">NPR</option>
            <option value="INR">INR</option>
            <option value="USD">USD</option>
            <option value="EUR">EUR</option>
            <option value="GBP">GBP</option>
        </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <button type="button" class="btn btn-secondary" @onclick="NavigateBack">Back</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    private async Task HandleRegistration()
    {
        if (await UserService.RegisterUser(newUser))
        {
            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = "User already exists.";
        }
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/");
    }

    private User newUser = new User();
    private string errorMessage;
}