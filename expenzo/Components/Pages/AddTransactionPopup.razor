@page "/add-transaction"
@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private Models.Transaction newTransaction = new Models.Transaction { TransactionDate = DateTime.Now };
    private int nextTransactionId = 1;

    private void AddTransaction()
    {
        newTransaction.TransactionId = nextTransactionId++;
        
        
        OnClose.InvokeAsync();

        // Reset newTransaction for the next entry
        newTransaction = new Models.Transaction { TransactionId = nextTransactionId, TransactionDate = DateTime.Now };
    }
}

@if (IsVisible)
{
    <div class="modal d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Transaction</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="() => OnClose.InvokeAsync()"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="transactionTitle" class="form-label">Title:</label>
                        <input type="text" id="transactionTitle" class="form-control" @bind="newTransaction.Title" />
                    </div>
                    <div class="mb-3">
                        <label for="transactionAmount" class="form-label">Amount:</label>
                        <input type="number" id="transactionAmount" class="form-control" @bind="newTransaction.Amount" />
                    </div>
                    <div class="mb-3">
                        <label for="transactionType" class="form-label">Type:</label>
                        <select id="transactionType" class="form-control" @bind="newTransaction.Type">
                            <option value="Income">Income</option>
                            <option value="Expense">Expense</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="transactionCategory" class="form-label">Category:</label>
                        <input type="text" id="transactionCategory" class="form-control" @bind="newTransaction.CategoryName" />
                    </div>
                    <div class="mb-3">
                        <label for="transactionDate" class="form-label">Date:</label>
                        <input type="date" id="transactionDate" class="form-control" @bind="newTransaction.TransactionDate" />
                    </div>
                    <div class="mb-3">
                        <label for="transactionRemarks" class="form-label">Remarks:</label>
                        <textarea id="transactionRemarks" class="form-control" @bind="newTransaction.Remarks"></textarea>
                    </div>
                    <div>
                        <strong>Transaction Id:</strong> @newTransaction.TransactionId
                        <br />
                        <strong>Title:</strong> @newTransaction.Title
                        <br />
                        <strong>Amount:</strong> @newTransaction.Amount
                        <br />
                        <strong>Type:</strong> @newTransaction.Type
                        <br />
                        <strong>Category:</strong> @newTransaction.CategoryName
                        <br />
                        <strong>Date:</strong> @newTransaction.TransactionDate.ToString("MM/dd/yyyy")
                        <br />
                        <strong>Remarks:</strong> @newTransaction.Remarks
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="AddTransaction">Save</button>
                    <button type="button" class="btn btn-secondary" @onclick="() => OnClose.InvokeAsync()">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}