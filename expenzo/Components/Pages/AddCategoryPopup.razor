@page "/add-category-popup"
@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public Models.Category Category { get; set; } = new Models.Category();

    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    // Save the category to the database
    private void SaveCategory()
    {
        if (string.IsNullOrWhiteSpace(Category.Name))
        {
            errorMessage = "Category name cannot be empty.";
            successMessage = string.Empty;
            return;
        }

        CategoryService.AddCategory(Category);
        successMessage = "Category added successfully!";
        errorMessage = string.Empty;
    }
}

@if (IsVisible)
{
    <div class="modal d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Category</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="() => OnClose.InvokeAsync()"></button>
                </div>
                <div class="modal-body">
                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success" role="alert">
                            @successMessage
                        </div>
                    }
                    <div class="mb-3">
                        <label for="categoryName" class="form-label">Category Name:</label>
                        <input type="text" class="form-control" id="categoryName" @bind="Category.Name">
                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="text-danger">@errorMessage</div>
                        }
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="() => OnClose.InvokeAsync()">Close</button>
                    <button type="button" class="btn btn-primary" @onclick="SaveCategory">Save Changes</button>
                </div>
            </div>
        </div>
    </div>
}