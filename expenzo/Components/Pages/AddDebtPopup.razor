@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private Models.Debt newDebt = new Models.Debt { DebtTakenDate = DateTime.Now, DebtDueDate = DateTime.Now.AddDays(1) };
    private int nextDebtId = 1;

    private void AddDebt()
    {
        // Automatically assign the Id to the new debt
        newDebt.DebtId = nextDebtId++;
        
        // Ensure DebtDueDate is after DebtTakenDate
        if (newDebt.DebtDueDate <= newDebt.DebtTakenDate)
        {
            newDebt.DebtDueDate = newDebt.DebtTakenDate.AddDays(1);
        }

        


        OnClose.InvokeAsync();

        // Reset newDebt for the next entry
        newDebt = new Models.Debt { DebtId = nextDebtId, DebtTakenDate = DateTime.Now, DebtDueDate = DateTime.Now.AddDays(1) };
    }
}

@if (IsVisible)
{
    <div class="modal d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Debt</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="() => OnClose.InvokeAsync()"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="debtAmount" class="form-label">Debt Amount:</label>
                        <input type="number" id="debtAmount" class="form-control" @bind="newDebt.DebtAmount" />
                    </div>
                    <div class="mb-3">
                        <label for="debtDueDate" class="form-label">Debt Due Date:</label>
                        <input type="date" id="debtDueDate" class="form-control" @bind="newDebt.DebtDueDate" />
                    </div>
                    <div class="mb-3">
                        <label for="debtSource" class="form-label">Debt Source:</label>
                        <select id="debtSource" class="form-control" @bind="newDebt.DebtSource">
                            <option value="Bank Loan">Banking Loan</option>
                            <option value="Friends">Friends</option>
                            <option value="Family">Family</option>
                        </select>
                    </div>
                    <div>
                        <strong>Id:</strong> @newDebt.DebtId
                        <br />
                        <strong>Amount:</strong> @newDebt.DebtAmount
                        <br />
                        <strong>Taken Date:</strong> @newDebt.DebtTakenDate.ToString("MM/dd/yyyy")
                        <br />
                        <strong>Due Date:</strong> @newDebt.DebtDueDate.ToString("MM/dd/yyyy")
                        <br />
                        <strong>Source:</strong> @newDebt.DebtSource
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="AddDebt">Save</button>
                    <button type="button" class="btn btn-secondary" @onclick="() => OnClose.InvokeAsync()">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}