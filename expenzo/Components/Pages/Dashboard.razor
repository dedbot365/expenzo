@page "/home"
@inject DebtDao DebtDao
@inject TransactionDao TransactionDao
@using MudBlazor
<h3>Dashboard</h3>
<style>
    .bg-skyblue {
        background-color: navy;
    }
    .bg-purple {
        background-color: purple;
    }
    .bg-grey {
        background-color: grey;
    }
    .dashboard-card {
        border-radius: 15px; 
        padding: 20px; 
        margin:10px;
    }
</style>

<div class="row">
    <div class="col-md-4">
        <div class="dashboard-card bg-success text-white text-center">
            <h5>Balance</h5>
            <h2>@totalBalance</h2>
        </div>
    </div>
    <div class="col-md-4">
        <div class="dashboard-card bg-skyblue text-white text-center">
            <h5>Income</h5>
            <h2>@totalIncome</h2>
        </div>
    </div>
    <div class="col-md-4">
        <div class="dashboard-card bg-danger text-white text-center">
            <h5>Expense</h5>
            <h2>@totalExpense</h2>
        </div>
    </div>
    <div class="col-md-4">
        <div class="dashboard-card bg-purple text-white text-center">
            <h5>Paid Debts</h5>
            <h2>@totalPaidAmount</h2>
        </div>
    </div>
    <div class="col-md-4">
        <div class="dashboard-card bg-grey text-white text-center">
            <h5>Pending Debts</h5>
            <h2>@remainingDebt</h2>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="dashboard-card bg-grey text-white text-center">
            <h5>Highest Income</h5>
            <h2>@highestIncome</h2>
        </div>
    </div>
    <div class="col-md-4">
        <div class="dashboard-card bg-grey text-white text-center">
            <h5>Lowest Income</h5>
            <h2>@lowestIncome</h2>
        </div>
    </div>
    <div class="col-md-4">
        <div class="dashboard-card bg-grey text-white text-center">
            <h5>Highest Expense</h5>
            <h2>@highestExpense</h2>
        </div>
    </div>
    <div class="col-md-4">
        <div class="dashboard-card bg-grey text-white text-center">
            <h5>Lowest Expense</h5>
            <h2>@lowestExpense</h2>
        </div>
    </div>
     <div class="col-md-4">
        <div class="dashboard-card bg-grey text-white text-center">
            <h5>Highest Debt Amount</h5>
            <h2>@highestDebtAmount</h2>
        </div>
    </div>
    <div class="col-md-4">
        <div class="dashboard-card bg-grey text-white text-center">
            <h5>Lowest Debt Amount</h5>
            <h2>@lowestDebtAmount</h2>
        </div>
    </div>

</div>

<div class="col-md-4">
        <div class="dashboard-card bg-grey text-white text-center">
            <h3>Income, Expense & Debt Chart</h3>
            <MudPaper Class="pa-4">
                <MudChart ChartType="ChartType.Pie" InputData="@chartData" InputLabels="@chartLabels" Width="300px" Height="300px" />
            </MudPaper>
        </div>
    </div>



@code {
    private decimal totalBalance;
    private decimal totalIncome;
    private decimal totalExpense;
    private decimal remainingDebt;
    private decimal totalPaidAmount;
    private decimal highestIncome;
    private decimal lowestIncome;
    private decimal highestExpense;
    private decimal lowestExpense;
    private decimal highestDebtAmount;
    private decimal lowestDebtAmount;

    private double[] chartData;
    private string[] chartLabels = { "Income", "Expense", "Pending Debt" };

    protected override void OnInitialized()
    {
        totalIncome = TransactionDao.GetTotalIncomeAmount();
        totalExpense = TransactionDao.GetTotalExpenseAmount();
        highestIncome = TransactionDao.GetHighestIncomeAmount();
        lowestIncome = TransactionDao.GetLowestIncomeAmount();
        highestExpense = TransactionDao.GetHighestExpenseAmount();
        lowestExpense = TransactionDao.GetLowestExpenseAmount();
        highestDebtAmount = DebtDao.GetHighestDebtAmount();
        lowestDebtAmount = DebtDao.GetLowestDebtAmount();
        remainingDebt = DebtDao.GetTotalDebtRemainingAmount();
        totalPaidAmount = DebtDao.GetTotalPaidAmount();
        totalBalance = totalIncome + remainingDebt - totalExpense;

        chartData = new double[] { (double)totalIncome, (double)totalExpense, (double)remainingDebt };
    }
}