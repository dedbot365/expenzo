@page "/edit-debt"
@inject IDebtService DebtService

@if (IsVisible)
{
    <div class="modal-backdrop fade show"></div>
    <div class="modal" style="display:block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Debt</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="ClosePopup"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="debtToEdit" OnValidSubmit="UpdateDebt">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label for="debtAmount" style="margin-bottom: 5px;">Amount</label>
                            <InputNumber @bind-Value="debtToEdit.DebtAmount" class="form-control" id="debtAmount" />
                            <ValidationMessage For="@(() => debtToEdit.DebtAmount)" />
                        </div>
                        <div class="form-group">
                            <label for="debtDueDate" style="margin-bottom: 5px;">Due Date</label>
                            <InputDate @bind-Value="debtToEdit.DebtDueDate" class="form-control" id="debtDueDate" />
                            <ValidationMessage For="@(() => debtToEdit.DebtDueDate)" />
                        </div>
                        <div class="form-group">
                            <label for="debtSource" style="margin-bottom: 5px;">Source</label>
                            <InputSelect @bind-Value="debtToEdit.DebtSource" class="form-control" id="debtSource">
                                <option value="">Select Source</option>
                                <option value="Bank">Bank</option>
                                <option value="Friend">Friend</option>
                                <option value="Family">Family</option>
                                <option value="Other">Other</option>
                            </InputSelect>
                            <ValidationMessage For="@(() => debtToEdit.DebtSource)" />
                        </div>
                        <div class="form-group">
                            <label for="remark" style="margin-bottom: 5px;">Remark</label>
                            <InputText @bind-Value="debtToEdit.Remark" class="form-control" id="remark" />
                            <ValidationMessage For="@(() => debtToEdit.Remark)" />
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="ClosePopup">Close</button>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public Models.Debt DebtToEdit { get; set; }

    private Models.Debt debtToEdit;

    protected override void OnParametersSet()
    {
        if (IsVisible)
        {
            debtToEdit = new Models.Debt
            {
                DebtId = DebtToEdit.DebtId,
                DebtAmount = DebtToEdit.DebtAmount,
                RemainingAmount = DebtToEdit.RemainingAmount,
                PaidAmount = DebtToEdit.PaidAmount,
                DebtTakenDate = DebtToEdit.DebtTakenDate,
                DebtDueDate = DebtToEdit.DebtDueDate,
                DebtSource = DebtToEdit.DebtSource,
                DebtStatus = DebtToEdit.DebtStatus,
                Remark = DebtToEdit.Remark
            };
        }
    }

    private void UpdateDebt()
{
    DebtService.UpdateDebt(debtToEdit);
    ClosePopup();
}

    private void ClosePopup()
    {
        IsVisible = false;
        OnClose.InvokeAsync(null);
    }
}